title: querydata.io
description_html: |-
  - <a href="https://github.com/rcaught/querydata.io" target="_blank">https://github.com/rcaught/querydata.io</a>
  <br />
  - <a href="https://www.linkedin.com/in/rcaught/" target="_blank">https://www.linkedin.com/in/rcaught/</a>
  <br />
  <br />
  This site employs heavy caching techniques that may result in unexpected results for dynamic SQL values, such as RANDOM() or DATE('now').
plugins:
  datasette-block-robots:
    allow_only_index: true
about_url: https://github.com/rcaught/querydata.io
databases:
  aws:
    description_html: |-
      Inspired by <a href="https://bigorange.cloud/updates?ref=querydata.io" target="_blank">bigorange.cloud/updates</a> and others.
    tables:
      whats_new:
        sort_desc: postDateTime
        source: What's New with AWS?
        source_url: https://aws.amazon.com/new/
        description_html: |-
          <a href="/aws#queries">Check out some examples queries</a>
          <br />
          Inspired by <a href="https://bigorange.cloud/updates?ref=querydata.io" target="_blank">bigorange.cloud/updates</a> and others.
      whats_new_tags:
        source: What's New with AWS?
        source_url: https://aws.amazon.com/new/
        description_html: |-
          <a href="/aws#queries">Check out some examples queries</a>
      tags:
        description_html: |-
          <a href="/aws#queries">Check out some examples queries</a>
    queries:
      whats_new_reinvent_updates:
        title: What's new - re:Invent updates
        sql: |-
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          WHERE
            CASE
              WHEN :year = '2012' THEN dayDate BETWEEN '2012-11-27' AND '2012-11-29'
              WHEN :year = '2013' THEN dayDate BETWEEN '2013-11-12' AND '2013-11-15'
              WHEN :year = '2014' THEN dayDate BETWEEN '2014-11-11' AND '2014-11-14'
              WHEN :year = '2015' THEN dayDate BETWEEN '2015-10-06' AND '2015-10-09'
              WHEN :year = '2016' THEN dayDate BETWEEN '2016-11-28' AND '2016-12-02'
              WHEN :year = '2017' THEN dayDate BETWEEN '2017-11-27' AND '2017-12-01'
              WHEN :year = '2018' THEN dayDate BETWEEN '2018-11-26' AND '2018-11-30'
              WHEN :year = '2019' THEN dayDate BETWEEN '2019-12-02' AND '2019-12-06'
              WHEN :year = '2020' THEN dayDate BETWEEN '2020-11-30' AND '2020-12-18'
              WHEN :year = '2021' THEN dayDate BETWEEN '2021-11-30' AND '2021-12-03'
              WHEN :year = '2022' THEN dayDate BETWEEN '2022-11-28' AND '2022-12-02'
              WHEN :year = '2023' THEN dayDate BETWEEN '2023-11-27' AND '2023-12-02'
            END
          ORDER BY
            postDateTime ASC;
      whats_new_last_batches:
        title: What's new - Only show last n batches
        description_html: |-
          AWS post updates in batches.
        sql: |-
          WITH ranked AS (
            SELECT
              dense_rank() OVER (ORDER BY postDateTime DESC) AS batch,
              headline,
              headlineUrl,
              strftime('%Y-%m-%d', postDateTime) AS dayDate
            FROM
              whats_new
            ORDER BY
              postDateTime DESC
          ) SELECT * FROM ranked WHERE batch <= CAST(:numberOfBatches AS int);
      whats_new_simple_feed:
        title: What's new - Simple feed (like https://aws.amazon.com/new/)
        description_html: |-
          The order of these results is close to AWS, but not exact.
          <br />
          AWS publishes batches of updates that all have the same <code>postDateTime</code>. No sorting on this column, in combination with other provided datetime columns, produces the same results as AWS (including <code>dateCreated</code>).
          <br />
          My best guess is that there is another unpublished sort key (likely a GUID, as I would expect an auto increment to align with <code>dateCreated</code>).
          <br />
          <hr />
          To scope by category, look at some other example queries, such as: <a href="https://querydata.io/aws/whats_new_tags_category_updates">What's new - updates by category tag</a>
        sql: |-
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          ORDER BY
            postDateTime DESC
          LIMIT 15;
      whats_new_updates_over_time:
        title: What's new - updates over time (with graph)
        description_html: |-
          <a href="https://querydata.io/aws/whats_new_updates_over_time?graph=true#g.mark=bar&g.x_column=postDate&g.x_type=ordinal&g.y_column=count&g.y_type=quantitative">Graph (click here and then scroll down)</a>
        sql: |-
          WITH RECURSIVE dates(date) AS (
            VALUES('2004-10-01')
            UNION ALL
            SELECT
                date(date, '+1 month')
            FROM
                dates
            WHERE
                date < date('now')
          ),
          updates as (
            SELECT
              count(*) as count,
              strftime('%Y-%m', postDateTime) as postDate
            FROM
              whats_new
            GROUP BY
              postDate
          ),
          results as (
            SELECT
              strftime('%Y-%m', dates.date) as postDate,
              COALESCE(updates.count, 0) as count
            FROM
              dates
            LEFT JOIN updates ON
              strftime('%Y-%m', dates.date) = updates.postDate
          )
          SELECT
            *
          FROM
            results;
      whats_new_atom_feed:
        title: What's new - atom/RSS feed (add your own conditions!)
        description_html: |-
          Append .atom to any URL that has these resulting fields, or click the link below.
        sql: |-
          SELECT
            id as atom_id,
            headline as atom_title,
            dateUpdated as atom_updated,
            headlineUrl as atom_link,
            postSummary || postBody as atom_content,
            author as atom_author_name
          FROM
            whats_new
          ORDER BY
            postDateTime DESC
          LIMIT
            25;
      whats_new_ipv6_updates_over_time:
        title: What's new - IPv6 mentions over time (with graph)
        description_html: |-
          <a href="https://querydata.io/aws/whats_new_ipv6_updates_over_time?graph=true#g.mark=bar&g.x_column=postDate&g.x_type=ordinal&g.y_column=count&g.y_type=quantitative">Graph (click here and then scroll down)</a>
        sql: |-
          WITH RECURSIVE dates(date) AS (
            VALUES('2011-05-01')
            UNION ALL
            SELECT
                date(date, '+1 month')
            FROM
                dates
            WHERE
                date < date('now')
          ),
          ipv6 as (
            SELECT
              count(*) as count,
              strftime('%Y-%m', postDateTime) as postDate
            FROM
              whats_new
            WHERE
              headline like '%ipv6%'
              OR postSummary like '%ipv6%'
              OR postBody like '%ipv6%'
            GROUP BY
              postDate
            ORDER BY
              postDate ASC
          ),
          results as (
            SELECT
              strftime('%Y-%m', dates.date) as postDate,
              COALESCE(ipv6.count, 0) as count
            FROM
              dates
            LEFT JOIN ipv6 ON
              strftime('%Y-%m', dates.date) = ipv6.postDate
          )
          SELECT
            *
          FROM
            results;
      whats_new_tags_exact_product_updates:
        title: What's new - updates by product tag (eg. Fargate)
        description_html: |-
          Check out <a href="https://querydata.io/aws/tags_all_general_products">this query</a> for all available product ids and names.
        sql: |-
          WITH tags AS (
            SELECT
              whats_new_id
            FROM
              whats_new_tags
            WHERE
              tag_id = 'whats-new#general-products#aws-fargate'
          )
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          WHERE
            id IN tags
          ORDER BY postDateTime DESC
          LIMIT 15;
      whats_new_tags_category_updates:
        title: What's new - updates by category tag (eg. databases)
        description_html: |-
          Check out <a href="https://querydata.io/aws/tags_namespaces_names">this query</a> for all available <code>whats-new#marketing-marchitecture</code> names.
        sql: |-
          WITH tags AS (
            SELECT
              whats_new_id
            FROM
              whats_new_tags
            WHERE
              tag_id = 'whats-new#marketing-marchitecture#databases'
          )
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          WHERE
            id IN tags
          ORDER BY postDateTime DESC
          LIMIT 15;
      whats_new_tags_last_update_per_product:
        title: What's new - last update per product
        sql: |-
          SELECT
            tags.name,
            wn.headline,
            wn.headlineUrl,
            MAX(wn.postDateTime)
          FROM
            tags
          JOIN whats_new_tags wnt ON
            wnt.tag_id = tags.id
          JOIN whats_new wn ON
            wn.id = wnt.whats_new_id
          GROUP BY
            tags.name
          HAVING
            tags.tagNamespaceId = 'whats-new#general-products'
          ORDER BY
            tags.name ASC;
      whats_new_tags_updates_per_product:
        title: What's new - number of updates per product (with graph)
        description_html: |-
          <a href="https://querydata.io/aws/whats_new_tags_updates_per_product?graph=true#g.mark=bar&g.x_column=graphLabel&g.x_type=ordinal&g.y_column=count&g.y_type=quantitative">Graph (click here and then scroll down)</a>
        sql: |-
          SELECT
            FORMAT(
                '%03d',
                ROW_NUMBER() OVER (ORDER BY COUNT(tags.name) DESC)
              ) || '. ' || tags.name as graphLabel,
            tags.name,
            COUNT(tags.name) as count
          FROM
            tags
          JOIN whats_new_tags wnt ON
            wnt.tag_id = tags.id
          JOIN whats_new wn ON
            wn.id = wnt.whats_new_id
          GROUP BY
            tags.name
          HAVING
            tags.tagNamespaceId = 'whats-new#general-products'
          ORDER BY
            count DESC;
      whats_new_find_updates_from_when_i_was_away:
        title: What's new - find updates from when I was away
        description_html: |-
          Date format, eg. <code>2023-11-01</code>
        sql: |-
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          WHERE
            dayDate BETWEEN :fromYearMonthDay AND :toYearMonthDay
          ORDER BY
            postDateTime ASC;
      whats_new_exclude_region_availability_updates:
        title: What's new - exclude region availability updates
        sql: |-
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate
          FROM
            whats_new
          WHERE
            headline not like "%available%region%"
          ORDER BY
            postDateTime DESC
          LIMIT
            15;
      whats_new_deprecations:
        title: What's new - updates mentioning deprecations
        sql: |-
          SELECT
            headline,
            headlineUrl,
            strftime('%Y-%m-%d', postDateTime) as dayDate,
            postSummary,
            postBody
          FROM
            whats_new
          WHERE
            headline like '%deprecation%'
            OR postSummary like '%deprecation%'
            OR postBody like '%deprecation%'
          ORDER BY
            postDateTime DESC
          LIMIT
            15;
      whats_new_utc_offset:
        title: What's new - localise by adding a UTC offset to dates
        sql: |-
          SELECT
            headline,
            headlineUrl,
            datetime(postDateTime, "+10:00") as postDateTime
          FROM
            whats_new
          ORDER BY
            postDateTime DESC
          LIMIT
            15;
      tags_namespaces_names:
        title: Tags - unique tag namespaces and available names
        sql: |-
          SELECT tagNamespaceId, group_concat(name) AS names FROM tags GROUP BY tagNamespaceId;
      tags_all_general_products:
        title: Tags - all general products, tag ids and names
        sql: |-
          SELECT id, name FROM tags WHERE tagNamespaceId = 'whats-new#general-products' ORDER BY id;
        description_html: |-
          <a href="https://querydata.io/aws/tags_namespaces_names">Tags - unique tag namespaces and available names</a> truncates this larger set, so providing dedicated query.