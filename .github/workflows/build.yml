name: build

on:
  schedule:
    # update these below if changing
    - cron: "*/15 * * * *" # every 15 mins
    - cron: "0 0 * * 0" # once a week "At 00:00 on Sunday."
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.3'
          cache: 'poetry'
      - name: Install deps
        run: poetry install
      - name: Cache AWS DB
        id: cache-aws-db
        uses: actions/cache@v3
        with:
          path: dbs
          key: dbs-${{ hashFiles('**/*.db') }}
      - name: Build (full)
        if: github.event_name == 'push' || steps.cache-aws-db.outputs.cache-hit != 'true' || github.event.schedule == '0 0 * * 0'
        run: |
          poetry run python -u src/querydataio/aws/full.py
      - name: Build (partial)
        if: github.event_name != 'push' || (steps.cache-aws-db.outputs.cache-hit == 'true' && github.event.schedule == '*/15 * * * *')
        run: |
          poetry run python -u src/querydataio/aws/partial.py
      - name: Deploy Datasette using Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CLOUDFLARE_PURGE_API_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_API_TOKEN }}
        run: |-
          sh ./bin/deploy.sh
