name: build

on:
  schedule:
    # update these below if changing
    - cron: "*/30 * * * *" # every 30 mins
    # - cron: "0 0 * * 0" # once a week "At 00:00 on Sunday."
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.3'
          cache: 'poetry'
      - name: Install deps
        run: poetry install
      - name: Restore Cache DBs
        id: cache-dbs-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            dbs/aws.duckdb.db
          key: ${{ runner.os }}-dbs-${{ hashFiles('dbs/aws.duckdb.db') }}
          restore-keys: ${{ runner.os }}-dbs-
      - name: Build (full)
        if: github.event_name == 'push'
        run: |
          poetry run python -u src/querydataio/aws/full.py
      - name: Build (partial)
        if: github.event.schedule == '*/30 * * * *'
        run: |
          poetry run python -u src/querydataio/aws/partial.py
      - name: Save Cache DBs
        id: cache-dbs-save
        uses: actions/cache/save@v3
        with:
          path: |
            dbs/aws.duckdb.db
          key: ${{ runner.os }}-dbs-${{ hashFiles('dbs/aws.duckdb.db') }}
      - name: Deploy Datasette using Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CLOUDFLARE_PURGE_API_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_API_TOKEN }}
        run: |-
          sh ./bin/deploy.sh
