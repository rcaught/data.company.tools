name: build

on:
  schedule:
    # update these below if changing
    - cron: "*/30 * * * *" # every 30 mins
    # - cron: "0 0 * * 0" # once a week "At 00:00 on Sunday."
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install retry
        run: docker cp $(docker create --name retry moul/retry):/bin/retry /usr/local/bin/retry && docker rm retry; retry --version
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"
      - name: Install deps
        run: poetry install
      - name: Run tests
        run: sh ./bin/test.sh
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: htmlcov/
          if-no-files-found: error
        if: ${{ always() }}
      - name: Restore Cache DBs
        id: cache-dbs-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            dbs/aws.duckdb.db
          key: ${{ runner.os }}-dbs-${{ hashFiles('dbs/aws.duckdb.db') }}
          restore-keys: ${{ runner.os }}-dbs-
      - name: Build (full)
        # if: github.event_name == 'push'
        run: |
          poetry run python -u src/querydataio/full.py
      - name: Save Cache DBs
        id: cache-dbs-save
        uses: actions/cache/save@v4
        with:
          path: |
            dbs/aws.duckdb.db
          key: ${{ runner.os }}-dbs-${{ hashFiles('dbs/aws.duckdb.db') }}
      - name: Deploy Datasette using Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CLOUDFLARE_PURGE_API_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_API_TOKEN }}
        run: |-
          retry --max-attempts 3 sh ./bin/deploy.sh
